{"ast":null,"code":"var _jsxFileName = \"/Users/gimjin-u/Desktop/kat/src/components/Radio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Radio = () => {\n  _s();\n  const radioRef = useRef(null);\n  const handleRadioChange = () => {\n    // 라디오 버튼의 상태를 가져옴\n    const isChecked = radioRef.current.checked;\n    console.log('Radio checked:', isChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"radioGroup\",\n        ref: radioRef,\n        onChange: handleRadioChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), \"Option 1\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"radioGroup\",\n        ref: radioRef,\n        onChange: handleRadioChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \"Option 2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Radio, \"KyalBN6/IdiN/tqftc2Oc8bvAIk=\");\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Radio","_s","radioRef","handleRadioChange","isChecked","current","checked","console","log","children","type","name","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimjin-u/Desktop/kat/src/components/Radio.jsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nconst Radio = () => {\n  const radioRef = useRef(null);\n\n  const handleRadioChange = () => {\n    // 라디오 버튼의 상태를 가져옴\n    const isChecked = radioRef.current.checked;\n    console.log('Radio checked:', isChecked);\n  };\n  return (\n    <div>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"radioGroup\"\n          ref={radioRef}\n          onChange={handleRadioChange}\n        />\n        Option 1\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"radioGroup\"\n          ref={radioRef}\n          onChange={handleRadioChange}\n        />\n        Option 2\n      </label>\n    </div>\n  );\n};\n\nexport default Radio;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,SAAS,GAAGF,QAAQ,CAACG,OAAO,CAACC,OAAO;IAC1CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,SAAS,CAAC;EAC1C,CAAC;EACD,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEW,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,YAAY;QACjBC,GAAG,EAAEV,QAAS;QACdW,QAAQ,EAAEV;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,YAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRlB,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEW,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,YAAY;QACjBC,GAAG,EAAEV,QAAS;QACdW,QAAQ,EAAEV;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,YAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}